#local file Variable: buildConfiguration
#local file Variable: nugetVersion
#local file Variable: isMasterBranch
#local file Variable: isDevelopBranch

#Pipeline Variable: nugetPackagePattern
#Pipeline Variable: nugetApiKey
#Pipeline Variable: nugetService


pool:
  vmImage: ubuntu-latest
 
variables:
  isMasterBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isDevelopBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  buildConfiguration: 'Release'

jobs:
- job: Phase_1
  displayName: Build and pack NuGet Package
  condition: or(eq(variables.isMasterBranch, 'true'),eq(variables.isDevelopBranch, 'true'))
  cancelTimeoutInMinutes: 1
 
  steps:
  - task: gitversion/setup@0
    displayName: GitVersion Setup
    inputs:
     versionSpec: 'x.x.x'

  - task: gitversion/execute@0
    displayName: GitVersion Execution
    inputs:
       updateAssemblyInfo: true
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
           $nugetVersion = "$env:GITVERSION_MAJORMINORPATCH"
           
           Write-Host "Version: $nugetVersion"
      pwsh: true
  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'

  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'NuGet pack'
    inputs:
      command: 'pack'
      packagesToPack: $(nugetPackagePattern)
      nobuild: true
      versioningScheme: 'byEnvVar'      
      versionEnvVar: 'nugetVersion'

- job: Phase_2
  displayName: Publish NuGet Package
  dependsOn: Phase_1
  condition: succeeded()#this job runs if Phase_1 succeeds only 
  cancelTimeoutInMinutes: 1
  
  steps:
  - task: NuGetCommand@2
    displayName: 'NuGet push to Studio.Nuget Feed'
    condition: eq(variables.isDevelopBranch, 'true') #this job runs if only branch=Develop
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '838a1637-5f30-4be5-b238-5d89b7f11556/6ef56d7d-fe79-470d-a768-6cc1df35acad'
      publishPackageMetadata: false

  - script: dotnet nuget push '$(Build.ArtifactStagingDirectory)/**/*.nupkg' --api-key $(nugetApiKey) --source $(nugetService)  
    displayName: 'Nuget push to Nuget.Org'
    condition: eq(variables.isMasterBranch, 'true'))#this job runs if only branch=Master
